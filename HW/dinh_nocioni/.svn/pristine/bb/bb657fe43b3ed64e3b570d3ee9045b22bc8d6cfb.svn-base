Please keep all files related to a homework or an assignment within the appropriate directory. Files checked in outside of specific homework or assignment directory will not be reviewed or graded for that homework/assignment.

Check in and modify files as many times as you like. You will not be able to modify the files after the deadline.

You will work as a pair, both of you are responsible for the completed work in all assignments and homework. Reasonable effort is expected from each person. If you do not check in, you will not receive any scores. When pairing please switch who checks in so there is significant number of check in from each of you.

The deadlines are strict, there will be no extensions. Don't email any code to Venkat or to the mailing list. Your last check in before the deadline will be graded. If your last check in breaks the code, both you and your pair will lose significant points.

Please feel free to ask for frequent reviews. See the reviews/readme.txt file for details on how to ask for reviews.

You can evolve the answers and solutions based on the reviews. Only the latest checkin at the time of review will be looked at. Also the final check in will be the only one graded.

You are still responsible to successfully complete an homework or assignment even if your pair is a no-show. You can request to change pairs at any time and if there is another person in the class willing to pair with you we can make the switch.

A lot of help will be provided in this course, but you have to start early and ask for help along the way.                                                                      

Please read the academic honesty policy posted on the course mailing list.                   

The above details apply to all homework and assignments in this course.                   

Now to homework #1.
==============================================================================
HW1: Due 11:59PM CT February 3

Is design dead according to Martin Fowler in 
<http://martinfowler.com/articles/designDead.html>?

Q1. What are some of the main observations he makes about how we should design?
- Phuong: 
Firstly, Martin Fowlwer referrenced that design exist to enable programmers to easily make changes to the software long-term. As design deteriorates, so is our ability to make changes effectively. Thus, we should design in a way that enable us as programmers to work on the software long-term.

Secondly, Martin concluded that the code should be as simple as possible, which in Kent definitions by importance: Runs all the Tests, No duplication, Reveals all the intention, and Fewest number of classes or methods.

Thirdly, effective design to the author means we understand the price of a pattern worth paying. We need to be more familiar with how to ease into a pattern gradually. Some advices for Xpers with pattern would be: investing time in learning about patterns, concentrate on when to apply pattern and how to apply pattern in simplest form, and finally don't be afraid to remove pattern.

Fourth, begin by accessing what the likely architecture is but be ready to simplify the architecture as soon as a part of the architecture isn't adding anything

Fifth, use diagram well in the design phase by keeping in mind what the drawing diagrams are for. Thus, only draw things that are neccessary to communicate the right message. Also use diagrams to explore a design before coding. Moreover, put the diagram where everyone can easilty access and if no one is using them, throw them away.

Sixth, rapid spotting is important for design since it means that you have to set things up so that potential problem areas are rapidly tested to find issues. It also means that it is worth doing experiments to see how hard future changes can be.

Q2. Relate these recommendations to your personal experiences, where it may have 
worked or may not have worked for you.
