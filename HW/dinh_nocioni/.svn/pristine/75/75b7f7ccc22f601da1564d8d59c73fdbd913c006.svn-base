import unittest
from src.wordPicker import getResponse, parse, get_a_random_word_given_a_seed
import random as rnd

class WordPickerTests(unittest.TestCase):

  def test_getResponse(self):
    self.assertTrue(len(getResponse()) > 0)

  def test_parse(self):
    expected, words = [['FAVOR', 'RAPID', 'AGILE'], '[FAVOR, RAPID, AGILE]']

    self.assertEqual(expected, parse(words))

  def test_parse_empty(self):

    self.assertEqual([], parse('[]'))

  def test_parse_exception(self):

    with self.assertRaises(ValueError):
      parse("FAVOR") 
    
  def test_get_a_random_word_give_a_seed(self):
      seed = 129
      wordList = ['FAVOR', 'RAPID', 'AGILE']
      
      word1 = get_a_random_word_given_a_seed(seed, wordList)
      word2 = get_a_random_word_given_a_seed(seed, wordList)
      
      self.assertTrue(word1 == word2)
      
     
if __name__ == '__main__': 
  unittest.main()
