def vendor_call_raises_exception(vendor):
    try:
        vendor()
        return False
    except Exception:
        return True

def find_lowest_price_and_vendor(num_of_days, vendors=[]):
    if len(vendors) == 0 or all(list(map(lambda vendor: vendor_call_raises_exception(vendor), vendors))):
        raise ValueError("No Vendor to Provide Service")
    
    filtered_vendors = list(filter(lambda vendor: not vendor_call_raises_exception(vendor), vendors))
    vendor_name, price_per_day = sorted(filtered_vendors, key=lambda vendor: vendor()[1])[0]() 

    return {'price_per_day': price_per_day,
            'total_price': price_per_day * num_of_days,
            'vendor_name': vendor_name}
