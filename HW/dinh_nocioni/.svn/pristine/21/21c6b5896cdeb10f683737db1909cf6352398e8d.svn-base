import enum

class Match(enum.Enum):
  EXACT = "EXACT"
  EXISTS = "EXISTS"
  NO_MATCH = "NO_MATCH"

def message(target, guesses): #Feedback: new code should go below the exisitng code
    messages = ["Amazing", "Splendid", "Awesome"]
    try:
        i = guesses.index(target)
        return messages[i] if i < 3 else "Yay"
    except ValueError:
        return "It was " + target + ", better luck next time"

def tally(target, guess):
    if len(guess) != len(target):
        raise ValueError("Incorrect Size")
        
    return [tallyForPosition(position, target, guess) for position in range(len(target))]

def tallyForPosition(position, target, guess):
    if target[position] == guess[position]:
        return Match.EXACT
    
    letterAtPosition = guess[position]
    
    positionalMatches = countPositionalMatches(target, guess, letterAtPosition)
    nonPositionalOccurrencesInTarget = countNumberOfOccurrenceeUntilPosition(len(target) - 1, target, letterAtPosition) - positionalMatches
    numberOfOccurancesInGuessUntilPosition = countNumberOfOccurrenceeUntilPosition(position, guess, letterAtPosition)

    return Match.EXISTS if nonPositionalOccurrencesInTarget >= numberOfOccurancesInGuessUntilPosition else Match.NO_MATCH

def countPositionalMatches(target, guess, letter):
    return [i if i == j else None for i, j in zip(target, guess)].count(letter)
    
def countNumberOfOccurrenceeUntilPosition(position, word, letter):
    return [letter if word[i] == letter else None for i in range(position + 1)].count(letter)

